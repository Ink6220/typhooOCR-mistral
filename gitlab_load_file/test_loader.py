import os
from pathlib import Path
from pydantic import BaseModel
from load_spilt_file import AllFileLoaderAndSplit_forSendToCountSplit

# Fix missing BaseModel import in load_spilt_file.py
if not hasattr(globals(), 'MetadataPinecone'):
    from pydantic import BaseModel
    class MetadataPinecone(BaseModel):
        project_id: str
        filename: str
        page: str
        text: str
        date_upload: str
        upload_by: str

def create_test_files():
    """р╕кр╕гр╣Йр╕▓р╕Зр╣Др╕Яр╕ер╣Мр╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕Зр╕кр╕│р╕лр╕гр╕▒р╕Ър╕Чр╕Фр╕кр╕нр╕Ъ р╣Вр╕Фр╕вр╣Ар╕Щр╣Йр╕Щр╣Ар╕Йр╕Юр╕▓р╕░ PDF"""
    import shutil
    
    # р╕кр╕гр╣Йр╕▓р╕Зр╣Вр╕Яр╕ер╣Ар╕Фр╕нр╕гр╣М test_files р╕Цр╣Йр╕▓р╕вр╕▒р╕Зр╣Др╕бр╣Ир╕бр╕╡
    test_dir = Path("./test_files")
    test_dir.mkdir(exist_ok=True)
    
    # р╕Др╕▒р╕Фр╕ер╕нр╕Б PDF р╕Ир╕▓р╕Бр╣Вр╕Яр╕ер╣Ар╕Фр╕нр╕гр╣М pdf_files р╣Др╕Ыр╕вр╕▒р╕З test_files
    pdf_source_dir = Path("./pdf_files")
    if pdf_source_dir.exists():
        pdf_files = list(pdf_source_dir.glob("*.pdf"))
        if pdf_files:
            for pdf_file in pdf_files[:2]:  # р╣Ар╕ер╕╖р╕нр╕Бр╣Ар╕Йр╕Юр╕▓р╕░ 2 р╣Др╕Яр╕ер╣Мр╣Бр╕гр╕Б
                shutil.copy(pdf_file, test_dir / pdf_file.name)
                print(f"р╕Др╕▒р╕Фр╕ер╕нр╕Б {pdf_file.name} р╣Др╕Ыр╕вр╕▒р╕З {test_dir}")
        else:
            print(f"тЪая╕П р╣Др╕бр╣Ир╕Юр╕Ър╣Др╕Яр╕ер╣М PDF р╣Гр╕Щ {pdf_source_dir}")
            # р╕кр╕гр╣Йр╕▓р╕Зр╣Др╕Яр╕ер╣М txt р╣Ар╕Юр╕╖р╣Ир╕нр╕Бр╕▓р╕гр╕Чр╕Фр╕кр╕нр╕Ъ
            with open(test_dir / "dummy.txt", "w", encoding="utf-8") as f:
                f.write("р╕Щр╕╡р╣Ир╕Др╕╖р╕нр╣Др╕Яр╕ер╣М dummy р╕кр╕│р╕лр╕гр╕▒р╕Ър╕Чр╕Фр╕кр╕нр╕Ър╣Ар╕Щр╕╖р╣Ир╕нр╕Зр╕Ир╕▓р╕Бр╣Др╕бр╣Ир╕Юр╕Ър╣Др╕Яр╕ер╣М PDF\n" * 5)
    else:
        print(f"тЪая╕П р╣Др╕бр╣Ир╕Юр╕Ър╣Вр╕Яр╕ер╣Ар╕Фр╕нр╕гр╣М {pdf_source_dir}")
        # р╕кр╕гр╣Йр╕▓р╕Зр╣Др╕Яр╕ер╣М txt р╣Ар╕Юр╕╖р╣Ир╕нр╕Бр╕▓р╕гр╕Чр╕Фр╕кр╕нр╕Ъ
        with open(test_dir / "dummy.txt", "w", encoding="utf-8") as f:
            f.write("р╕Щр╕╡р╣Ир╕Др╕╖р╕нр╣Др╕Яр╕ер╣М dummy р╕кр╕│р╕лр╕гр╕▒р╕Ър╕Чр╕Фр╕кр╕нр╕Ър╣Ар╕Щр╕╖р╣Ир╕нр╕Зр╕Ир╕▓р╕Бр╣Др╕бр╣Ир╕Юр╕Ър╣Вр╕Яр╕ер╣Ар╕Фр╕нр╕гр╣М PDF\n" * 5)
    
    print(f"тЬЕ р╕кр╕гр╣Йр╕▓р╕Зр╣Др╕Яр╕ер╣Мр╕Чр╕Фр╕кр╕нр╕Ър╣Гр╕Щ {test_dir} р╣Ар╕гр╕╡р╕вр╕Ър╕гр╣Йр╕нр╕вр╣Бр╕ер╣Йр╕з")
    return test_dir

def main():
    """р╕Чр╕Фр╕кр╕нр╕Ър╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щ AllFileLoaderAndSplit_forSendToCountSplit"""
    # р╕кр╕гр╣Йр╕▓р╕Зр╣Др╕Яр╕ер╣Мр╕Чр╕Фр╕кр╕нр╕Ъ
    test_dir = create_test_files()
    
    # р╕Бр╕│р╕лр╕Щр╕Фр╕Др╣Ир╕▓р╕Хр╕▒р╕зр╣Бр╕Ыр╕г
    username = "test_user"
    project_id = "test_project_123"
    
    print("\nЁЯФН р╣Ар╕гр╕┤р╣Ир╕бр╕Чр╕Фр╕кр╕нр╕Ър╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щ AllFileLoaderAndSplit_forSendToCountSplit...")
    print(f"ЁЯУВ р╣Др╕Фр╣Ар╕гр╣Зр╕Бр╕Чр╕нр╕гр╕╡: {test_dir}")
    print(f"ЁЯСд р╕Ьр╕╣р╣Йр╣Гр╕Кр╣Й: {username}")
    print(f"ЁЯФС idр╣Вр╕Ыр╕гр╣Ар╕Ир╕Д: {project_id}\n")
    
    # р╣Ар╕гр╕╡р╕вр╕Бр╣Гр╕Кр╣Йр╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╕Чр╕╡р╣Ир╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕гр╕Чр╕Фр╕кр╕нр╕Ъ
    results = AllFileLoaderAndSplit_forSendToCountSplit(
        username=username,
        directory=str(test_dir),
        project_id=project_id
    )
    
    # р╣Бр╕кр╕Фр╕Зр╕Ьр╕ер╕ер╕▒р╕Юр╕Шр╣М
    print(f"\nтЬЕ р╣Др╕Фр╣Йр╕гр╕▒р╕Ър╕Ьр╕ер╕ер╕▒р╕Юр╕Шр╣Мр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф {len(results)} р╕Кр╕┤р╣Йр╕Щ\n")
    
    # р╣Бр╕кр╕Фр╕Зр╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕Зр╕Ьр╕ер╕ер╕▒р╕Юр╕Шр╣Мр╕Ир╕▓р╕Бр╣Бр╕Хр╣Ир╕ер╕░р╕Ыр╕гр╕░р╣Ар╕ар╕Чр╣Др╕Яр╕ер╣М
    file_types = {}
    
    # р╕Ир╕▒р╕Фр╕Бр╕ер╕╕р╣Ир╕бр╕Хр╕▓р╕бр╕Ыр╕гр╕░р╣Ар╕ар╕Чр╣Др╕Яр╕ер╣М
    for doc in results:
        ext = os.path.splitext(doc.filename)[1]
        if ext not in file_types:
            file_types[ext] = []
        file_types[ext].append(doc)
    
    # р╣Бр╕кр╕Фр╕Зр╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕Зр╕Ир╕▓р╕Бр╣Бр╕Хр╣Ир╕ер╕░р╕Ыр╕гр╕░р╣Ар╕ар╕Ч
    for ext, docs in file_types.items():
        print(f"\nЁЯУД р╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕Зр╕Ир╕▓р╕Бр╣Др╕Яр╕ер╣М {ext} (р╕бр╕╡ {len(docs)} р╕Кр╕┤р╣Йр╕Щ):")
        sample = docs[0]  # р╣Бр╕кр╕Фр╕Зр╕Кр╕┤р╣Йр╕Щр╣Бр╕гр╕Бр╣Ар╕Ыр╣Зр╕Щр╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕З
        print(f"  ЁЯУЭ р╕Кр╕╖р╣Ир╕нр╣Др╕Яр╕ер╣М: {sample.filename}")
        print(f"  ЁЯУД р╕лр╕Щр╣Йр╕▓: {sample.page}")
        print(f"  ЁЯФЦ р╕гр╕лр╕▒р╕кр╣Вр╕Ыр╕гр╣Ар╕Ир╕Д: {sample.project_id}")
        print(f"  ЁЯСд р╕нр╕▒р╕Юр╣Вр╕лр╕ер╕Фр╣Вр╕Фр╕в: {sample.upload_by}")
        print(f"  ЁЯХТ р╕зр╕▒р╕Щр╕Чр╕╡р╣Ир╕нр╕▒р╕Юр╣Вр╕лр╕ер╕Ф: {sample.date_upload}")
        print(f"  ЁЯУЛ р╣Ар╕Щр╕╖р╣Йр╕нр╕лр╕▓ (р╕Ър╕▓р╕Зр╕кр╣Ир╕зр╕Щ): {sample.text[:100]}...")
        
        # р╣Бр╕кр╕Фр╕Зр╣Ар╕Щр╕╖р╣Йр╕нр╕лр╕▓р╣Ар╕Хр╣Зр╕бр╕Вр╕нр╕Зр╕Кр╕┤р╣Йр╕Щр╣Бр╕гр╕Б (р╕кр╕│р╕лр╕гр╕▒р╕Ър╕Фр╕╣р╕гр╕▓р╕вр╕ер╕░р╣Ар╕нр╕╡р╕вр╕Ф)
        if len(docs) > 1:
            print(f"\n  ЁЯФН р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Вр╕нр╕Зр╕Кр╕┤р╣Йр╕Щр╕Чр╕╡р╣И 2 (р╣Ар╕Щр╕╖р╣Йр╕нр╕лр╕▓р╣Ар╕Хр╣Зр╕б):")
            print(f"  {docs[1].text}")
    
    print("\nтЬЕ р╕Чр╕Фр╕кр╕нр╕Ър╣Ар╕кр╕гр╣Зр╕Ир╕кр╕┤р╣Йр╕Щ")
    
if __name__ == "__main__":
    main()
